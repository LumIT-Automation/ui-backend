#!/bin/bash

# Backup script for databases in the ui-backend container.
# Run from the host via podman exec, so the backup is not deleted even if the container package is purged.

PATH=/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin

# Grab some settings.
[ -r /etc/default/ui-backend-container ] && . /etc/default/ui-backend-container

now=`date +%Y%m%d-%H.%M`
api="ui-backend"

bckDir="/home/bck/${api}"
containerDir="/var/www/ui-backend/backend"
containerDirOnHost="/var/lib/containers/storage/volumes/${api}/_data"

# Name of the databases that should be backed up.
dbs=(uib)

# Number of days of retention: delete backups older than this number of days.
if echo $UI_BACKEND_DB_RETENTION | grep -Eq '^[0-9]+$'; then
    retention=$UI_BACKEND_DB_RETENTION
else
    retention=30
fi


cd $bckDir || exit 1

for db in ${dbs[@]}; do
    bckFile="${db}_${api}_${now}.dmp.xz"
    bckCommand="mysqldump --single-transaction --routines --events --add-drop-database --add-drop-table --add-drop-trigger --databases $db"
    containerCommand="$bckCommand | xz > ${containerDir}/${bckFile}"

    if podman exec $api bash -c "$containerCommand"; then
        mv ${containerDirOnHost}/${bckFile} $bckDir && chmod 400 ${bckDir}/${bckFile}
    else
        echo "$api: backup of database $db failed."
        exit 1
    fi

done

# The backup script should run daily.
# Delete backups older than $retention days.
find $bckDir -name "${db}_${api}_*" -mtime +${retention} -exec rm -f {} \;

